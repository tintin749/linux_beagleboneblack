From 6b1da6de4af63b5b3096afaaa89e086be6576a22 Mon Sep 17 00:00:00 2001
From: Paul Barker <paul.barker@sancloud.com>
Date: Mon, 18 Oct 2021 12:25:16 +0100
Subject: [PATCH 2/3] qcacld support: Export regulatory_hint_user()

Taken from commit 8e407b62f2ed89fe41c40a976669df1693cf7027
in https://github.com/boundarydevices/linux-imx6.

Ref: BSP-65
Signed-off-by: Paul Barker <paul.barker@sancloud.com>
---
 include/net/cfg80211.h | 26 ++++++++++++++++++++++++++
 net/wireless/reg.c     |  1 +
 2 files changed, 27 insertions(+)

diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index 9fb231850e2f..e60bd4d6f0f8 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -5909,6 +5909,32 @@ void cfg80211_send_layer2_update(struct net_device *dev, const u8 *addr);
  */
 int regulatory_hint(struct wiphy *wiphy, const char *alpha2);
 
+/**
+ * regulatory_hint_user - hint to the wireless core a regulatory domain
+ * which the driver has received from an application
+ * @alpha2: the ISO/IEC 3166 alpha2 the driver claims its regulatory domain
+ *  should be in. If @rd is set this should be NULL. Note that if you
+ *  set this to NULL you should still set rd->alpha2 to some accepted
+ *  alpha2.
+ * @user_reg_hint_type: the type of user regulatory hint.
+ *
+ * Wireless drivers can use this function to hint to the wireless core
+ * the current regulatory domain as specified by trusted applications,
+ * it is the driver's responsibilty to estbalish which applications it
+ * trusts.
+ *
+ * The wiphy should be registered to cfg80211 prior to this call.
+ * For cfg80211 drivers this means you must first use wiphy_register(),
+ * for mac80211 drivers you must first use ieee80211_register_hw().
+ *
+ * Drivers should check the return value, its possible you can get
+ * an -ENOMEM or an -EINVAL.
+ *
+ * Return: 0 on success. -ENOMEM, -EINVAL.
+ */
+int regulatory_hint_user(const char *alpha2,
+             enum nl80211_user_reg_hint_type user_reg_hint_type);
+
 /**
  * regulatory_set_wiphy_regd - set regdom info for self managed drivers
  * @wiphy: the wireless device we want to process the regulatory domain on
diff --git a/net/wireless/reg.c b/net/wireless/reg.c
index a04fdfb35f07..4ec31b36e899 100644
--- a/net/wireless/reg.c
+++ b/net/wireless/reg.c
@@ -3171,6 +3171,7 @@ int regulatory_hint_user(const char *alpha2,
 
 	return 0;
 }
+EXPORT_SYMBOL(regulatory_hint_user);
 
 int regulatory_hint_indoor(bool is_indoor, u32 portid)
 {
-- 
2.30.2

